/*
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package io.typefox.yang.scoping

import io.typefox.yang.resource.ScopeContext
import io.typefox.yang.yang.YangPackage
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.IScope

/**
 * Scope provider for YANG, which is based on single batch processing and subsequently caching scopes
 */
class YangScopeProvider implements IScopeProvider {

	override getScope(EObject context, EReference reference) {
		val ctx = findScopeInAdapters(context, reference)
		if (ctx === null) {
			return IScope.NULLSCOPE
		}
		switch reference.eClass {
			case YangPackage.Literals.ABSTRACT_MODULE : {
				return ctx.moduleScope
			}
			default : {
				return ctx.nodeScope
			}
		}
	}
	
	protected def ScopeContext findScopeInAdapters(EObject object, EReference reference) {
		val scopesAdapter = ScopeContext.findInEmfObject(object)
		if (scopesAdapter !== null) {
			return scopesAdapter
		}
		var container = object.eContainer
		while (container !== null) {
			val adapter = ScopeContext.findInEmfObject(object)
			if (adapter !== null) {
				return adapter
			}
			container = container.eContainer
		}
		return ScopeContext.findInEmfObject(object.eResource)
	}
	
}


